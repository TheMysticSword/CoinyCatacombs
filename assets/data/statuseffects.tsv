id	colour	icon	sound	stackable	negative	invisible	script_onInflicted	script_onRemoved	script_beforeStartTurn	script_onStartTurn	script_onEndTurn	script_onItemUsed	script_modifyDamage	script_onDamage
EXTRATURN	YELLOW	particle_star.png	magic2.wav	YES	NO	NO								
DODGE	YELLOW	status_dodge.png	status_dodge.wav	YES	NO	NO			if (turn > 1 || !self.isPlayer) self.removeStatus(thisStatus.id, STATUSMAX);				if (attackTarget == self && attackInflictor == target) {attackTarget = null; self.removeStatus(thisStatus.id); GlobalScripts.playSound("attack_dodged.wav");}	
MORE_COINS	YELLOW	status_coins.png	magic1.wav	YES	NO	NO			self.coins += thisStatus.value;		self.coins -= thisStatus.value; self.removeStatus(thisStatus.id, STATUSMAX);			
LESS_COINS	RED	status_coins.png	attack_electric.wav	YES	YES	NO			self.coins -= thisStatus.value;		self.coins += thisStatus.value; self.removeStatus(thisStatus.id, STATUSMAX);			
BURN	RED	status_fire.png	status_burn.wav	YES	YES	NO	if (self.hasStatus("DECAY")) {var fusionStacks = Math.minInt(self.getStatus("BURN"), self.getStatus("DECAY")); self.removeStatus("BURN", fusionStacks); self.removeStatus("DECAY", fusionStacks); self.addStatus(self, "COMBUSTION", fusionStacks);} if (self.hasStatus("SHOCK")) {var fusionStacks = Math.minInt(self.getStatus("BURN"), self.getStatus("SHOCK")); self.removeStatus("BURN", fusionStacks); self.removeStatus("SHOCK", fusionStacks); self.addStatus(self, "MANIPULATION", fusionStacks);}			CombatScripts.attack(target, self, 1);	self.removeStatus(thisStatus.id, 1);			
SHOCK	BLUE	status_shock.png	status_shock.wav	YES	YES	NO	if (self.hasStatus("BURN")) {var fusionStacks = Math.minInt(self.getStatus("BURN"), self.getStatus("SHOCK")); self.removeStatus("BURN", fusionStacks); self.removeStatus("SHOCK", fusionStacks); self.addStatus(self, "MANIPULATION", fusionStacks);} if (self.hasStatus("DECAY")) {var fusionStacks = Math.minInt(self.getStatus("DECAY"), self.getStatus("SHOCK")); self.removeStatus("DECAY", fusionStacks); self.removeStatus("SHOCK", fusionStacks); self.addStatus(self, "MIASMA", fusionStacks);}				self.removeStatus(thisStatus.id, STATUSMAX);		if (attackTarget == self) damage += thisStatus.value;	
DECAY	GREEN	status_decay.png	status_decay.wav	YES	YES	NO	if (self.hasStatus("DECAY")) {var fusionStacks = Math.minInt(self.getStatus("BURN"), self.getStatus("DECAY")); self.removeStatus("BURN", fusionStacks); self.removeStatus("DECAY", fusionStacks); self.addStatus(self, "COMBUSTION", fusionStacks);} if (self.hasStatus("DECAY")) {var fusionStacks = Math.minInt(self.getStatus("DECAY"), self.getStatus("SHOCK")); self.removeStatus("DECAY", fusionStacks); self.removeStatus("SHOCK", fusionStacks); self.addStatus(self, "MIASMA", fusionStacks);}				self.removeStatus(thisStatus.id, STATUSMAX);	usedItem.cooldown += 1; self.removeStatus(thisStatus.id);		
COMBUSTION	ORANGE	status_combustion.png	status_burn.wav	YES	YES	NO	CombatScripts.attack(target, self, 5 * valueDelta); var randomItem = GlobalScripts.random(self.items); randomItem.cooldown += 1; randomItem.canActivate = false; randomItem.runForPanel(x -> x.refresh());				self.removeStatus(thisStatus.id, STATUSMAX);			
MANIPULATION	PURPLE	status_manipulation.png	status_manipulation.wav	YES	YES	NO							if (attackTarget == target && attackInflictor == self) {attackInflictor = self; attackTarget = self; self.removeStatus(thisStatus.id);}	
MIASMA	GREEN	status_miasma.png	status_miasma.wav	YES	YES	NO			if (turn > 1 || !self.isPlayer) {CombatScripts.attack(target, self, thisStatus.value); GlobalScripts.playSound("status_miasma.wav");}					